* Definitions
:PROPERTIES:
:header-args:python: :noweb yes :exports none :results none :noweb-ref notebook/base
:END:

** Generics

*** Imports

Defining imports

#+begin_src python
import numpy as np
import scipy
import sympy
from sympy import symbols, latex
import matplotlib.pyplot as plt
import seaborn as sns
from os.path import join as pathjoin
import os
import sys
from pathlib import Path
import pandas as pd
#+end_src

*** Path helpers

Path helpers

#+begin_src python
IMAGES_DIR = 'images'
RESULTS_DIR = 'results'

def notebook_makesubdir(pname):
    subdirname = pathjoin('./', pname)
    Path(subdirname).mkdir(parents=True, exist_ok = True)
    return subdirname

def notebook_get_fname(fname, basedir = None):
    fullname = pathjoin(
        basedir if basedir else './',
        fname)
    dirname = os.path.dirname(fullname)
    notebook_makesubdir(dirname)
    return fullname

notebook_get_fname_images = lambda fname: \
    notebook_get_fname(fname, basedir=IMAGES_DIR)

notebook_get_fname_results = lambda fname: \
    notebook_get_fname(fname, basedir=RESULTS_DIR)
#+end_src

*** Variable assignment
Ability to assign variables if they don't exist.

#+begin_src python
def assign_if_doesnt_exist(varname, varfunc):
    if not varname in globals() or globals()[varname] is None:
        globals()[varname] = varfunc()
#+end_src

** Library related

*** SNS

This function helps make a png out of a sns figure. Returns the filename.

#+begin_src python
def sns_to_png(sns_figure, fname):
    fig = sns_figure.get_figure()
    full_fname = notebook_get_fname_images(fname)
    fig.savefig(full_fname)
    plt.clf()
    return full_fname
#+end_src

* Import all
:PROPERTIES:
:header-args:python: :noweb yes :exports none :results none :noweb-ref notebook/notbase
:END:

#+name: notebook/all
#+begin_src python :noweb yes
<<notebook/base>>
#+end_src
