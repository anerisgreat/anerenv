- name: Update cache
  package:
    update_cache: yes
  become: yes

- name: Install editor packages
  package:
    name:
      - pandoc
      - graphviz
      - offlineimap
      - gmime3
      - gnuchess
      - xapian-core
      - talloc
      - notmuch
      - jupyter-notebook
      - pychess

  become: yes

- name: Install graphviz
  pip:
    name: graphviz

- name: Install Pygments
  pip:
    name: Pygments

- name: Install editor packages for Debian
  when: ansible_os_family == "Debian"
  block:
    - name: Install texlive-full for debian
      package:
        name:
        - texlive-full
        - fonts-liberation2
      become: yes

- name: Install editor packages for Arch
  when: ansible_os_family == "Archlinux"
  block:
    - name: Install texlive-full for arch
      package:
        name:
        - texlive-most
        - texlive-lang
        - ttf-liberation
        - ttc-iosevka
        - python-pygments
      become: yes

    - name: Check if tllocalmgr is installed
      command: tllocalmgr --version
      register: check_tllocalmgr_reg
      ignore_errors: true
      changed_when: check_tllocalmgr_reg.rc == 1
      failed_when: false

    - name: Install tllocalmgr-installer from YAY
      when: check_tllocalmgr_reg.rc != 0
      command: yay -S tllocalmgr-git --nocleanmenu --nodiffmenu --noeditmenu --noupgrademenu --noconfirm

- name: Install pylint
  pip:
    name: pylint

- name: Check if emacs is installed
  command: emacs --version
  register: check_reg_emacs
  ignore_errors: true
  changed_when: check_reg_emacs.rc == 1
  failed_when: false

- name: Install emacs
  when: check_reg_emacs.rc != 0
  block:
    - name: Install emacs on Arch
      when: ansible_os_family == "Archlinux"
      block:
        - name: Install emacs for arch on YAY
          command: yay -S emacs-git --nocleanmenu --nodiffmenu --noeditmenu --noupgrademenu --noconfirm

    - name: Install emacs on Debian
      when: ansible_os_family == "Debian"
      block:
        - name: Clone emacs
          git:
            repo: git://git.sv.gnu.org/emacs.git
            dest: "{{ emacs_src_dir }}"
            version: master

        - name: Autogen emacs
          command: ./autogen.sh
          args:
            chdir: "{{ emacs_src_dir }}/"

        - name: Configure emacs
          command: ./configure --with-modules
          args:
            chdir: "{{ emacs_src_dir }}/"

        - name: Make emacs
          make:
            chdir: "{{ emacs_src_dir }}/"

        - name: Install emacs
          make:
            chdir: "{{ emacs_src_dir }}/"
            target: install
            params:
            NUM_THREADS: 4
          become: yes

- name: Clone chemacs
  git:
    repo: https://github.com/plexus/chemacs2.git
    dest: "{{ chemacs_src_dir }}"
    version: master

- name: Create directory for emacs configurations
  file:
    path: "{{ emacs_config_dir }}"
    state: directory

- name: Create directory for lazymacs
  file:
    path: "{{ lazymacs_dir }}"
    state: directory

- name: Create directory for lazymacs extras
  file:
    path: "{{ lazymacs_dir }}/extra"
    state: directory

- name: link init.el file
  file:
    src: "{{ anerenv_home }}/roles/editor/files/init.el"
    dest: "{{ lazymacs_dir }}/init.el"
    state: link

- name: Link config.org file
  file:
    src: "{{ anerenv_home }}/roles/editor/files/config.org"
    dest: "{{ lazymacs_dir }}/config.org"
    state: link

- name: Create directory for emacs templates
  file:
    path: "{{ emacs_templates_dir }}"
    state: directory

- name: Link base notebook directory
  file:
    src: "{{ anerenv_home }}/roles/editor/files/base-notebook.org"
    dest: "{{ emacs_templates_dir }}/base-notebook.org"
    state: link

- name: Link notebook template
  file:
    src: "{{ anerenv_home }}/roles/editor/files/notebook-template.org"
    dest: "{{ emacs_templates_dir }}/notebook-template.org"
    state: link

- name: Link presentation template
  file:
    src: "{{ anerenv_home }}/roles/editor/files/presentation-template.org"
    dest: "{{ emacs_templates_dir }}/presentation-template.org"
    state: link

- name: Link presentation template
  file:
    src: "{{ anerenv_home }}/roles/editor/files/exercise-template.org"
    dest: "{{ emacs_templates_dir }}/exercise-template.org"
    state: link

- name: Create custom.el if it doesn't exist
  copy:
    content: ""
    dest: "{{ lazymacs_dir }}/custom.el"
    force: no

- name: Create emacs-profiles.el if doesn't exist
  template:
    force: no
    src: "{{ anerenv_home }}/roles/editor/templates/emacs-profiles.el.j2"
    dest: "{{ ansible_env.HOME }}/.emacs-profiles.el"

- name: Check if notmuch is installed
  command: notmuch --version
  register: check_notmuch_reg
  ignore_errors: true
  changed_when: check_notmuch_reg.rc == 1
  failed_when: false

- name: Create directory for org
  file:
    path: "{{ org_dir }}"
    state: directory

- name: Create directory for agenda
  file:
    path: "{{ agenda_dir }}"
    state: directory

- name: Create directory for journal
  file:
    path: "{{ journal_dir }}"
    state: directory

- name: Create directory for roam
  file:
    path: "{{ roam_dir }}"
    state: directory

- name: Create directory for projects
  file:
    path: "{{ projects_dir }}"
    state: directory

# - name: Create directory for chess
#   file:
#     path: "{{ chess_dir }}"
#     state: directory

# - name: Create directory for chess games
#   file:
#     path: "{{ chess_dir }}/mygames"
#     state: directory
