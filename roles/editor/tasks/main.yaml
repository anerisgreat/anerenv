- name: Update cache
  package:
    update_cache: yes
  become: yes

- name: Install editor packages
  package:
    name:
      - pandoc
      - graphviz
      - offlineimap
      - gmime3
      - xapian-core
      - talloc

  become: yes

- name: Install graphviz
  pip:
    name: graphviz

- name: Install Pygments
  pip:
    name: Pygments

- name: Install editor packages for Debian
  when: ansible_os_family == "Debian"
  block:
    - name: Install texlive-full for debian
      package:
        name:
        - texlive-full
        - fonts-liberation2
        - polybar
      become: yes

- name: Install editor packages for Arch
  when: ansible_os_family == "Archlinux"
  block:
    - name: Install texlive-full for arch
      package:
        name:
        - texlive-most
        - texlive-lang
        - ttf-liberation
        - python-pygments
      become: yes

    - name: Check if tllocalmgr is installed
      command: tllocalmgr --version
      register: check_tllocalmgr_reg
      ignore_errors: true
      changed_when: check_tllocalmgr_reg.rc == 1
      failed_when: false

    - name: Install tllocalmgr-installer from YAY
      when: check_tllocalmgr_reg.rc != 0
      command: yay -S tllocalmgr-git --nocleanmenu --nodiffmenu --noeditmenu --noupgrademenu --noconfirm

    - name: Check if polybar is installed
      command: polybar --version
      register: check_polybar_reg
      ignore_errors: true
      changed_when: check_polybar_reg.rc == 1
      failed_when: false

    - name: Install polybar from YAY
      when: check_polybar_reg.rc != 0
      command: yay -S polybar --nocleanmenu --nodiffmenu --noeditmenu --noupgrademenu --noconfirm

- name: Install pylint
  pip:
    name: pylint

- name: Check if emacs is installed
  command: emacs --version
  register: check_reg_emacs
  ignore_errors: true
  changed_when: check_reg_emacs.rc == 1
  failed_when: false

- name: Install emacs
  when: check_reg_emacs.rc != 0
  block:
    - name: Clone emacs
      git:
        repo: git://git.sv.gnu.org/emacs.git
        dest: "{{ emacs_src_dir }}"
        version: master

    - name: Autogen emacs
      command: ./autogen.sh
      args:
        chdir: "{{ emacs_src_dir }}/"

    - name: Configure emacs
      command: ./configure --with-modules
      args:
        chdir: "{{ emacs_src_dir }}/"

    - name: Make emacs
      make:
        chdir: "{{ emacs_src_dir }}/"

    - name: Install emacs
      make:
        chdir: "{{ emacs_src_dir }}/"
        target: install
      become: yes

- name: Clone chemacs
  git:
    repo: https://github.com/plexus/chemacs.git
    dest: "{{ chemacs_src_dir }}"
    version: master

- name: Install chemacs
  command: bash install.sh
  args:
    chdir: "{{ chemacs_src_dir }}/"

- name: Create directory for emacs configurations
  file:
    path: "{{ emacs_config_dir }}"
    state: directory

- name: Create directory for lazymacs
  file:
    path: "{{ lazymacs_dir }}"
    state: directory

- name: Create directory for lazymacs extras
  file:
    path: "{{ lazymacs_dir }}/extra"
    state: directory

- name: link init.el file
  file:
    src: "{{ anerenv_home }}/roles/editor/files/init.el"
    dest: "{{ lazymacs_dir }}/init.el"
    state: link

- name: Link config.org file
  file:
    src: "{{ anerenv_home }}/roles/editor/files/config.org"
    dest: "{{ lazymacs_dir }}/config.org"
    state: link

- name: Check if emacs-profiles.el file exists
  stat: path="{{ ansible_env.HOME }}/.emacs-profiles.el"
  register: lazymacs_initel_stat

- name: Create emacs-profiles.el if doesn't exist
  template:
    src: "{{ anerenv_home }}/roles/editor/templates/emacs-profiles.el.j2"
    dest: "{{ ansible_env.HOME }}/.emacs-profiles.el"

- name: Check if notmuch is installed
  command: notmuch --version
  register: check_notmuch_reg
  ignore_errors: true
  changed_when: check_notmuch_reg.rc == 1
  failed_when: false

- name: Install notmuch
  when: check_notmuch_reg.rc != 0
  block:
    - name: Clone notmuch-mail
      git:
        repo: https://git.notmuchmail.org/git/notmuch
        dest: "{{ notmuch_dir }}"

    - name: Configure notmuch
      command: ./configure
      args:
        chdir: "{{ notmuch_dir }}/"

    - name: Make notmuch
      make:
        chdir: "{{ notmuch_dir }}/"

    - name: Install notmuch
      make:
        chdir: "{{ notmuch_dir }}/"
        target: install
      become: yes

- name: Create directory for tasks
  file:
    path: "{{ anerenv_user_home }}/.tasks"
    state: directory

